{
    "swagger": "2.0",
    "info": {
        "contact": {}
    },
    "paths": {
        "/listAssets/{walletAddress}": {
            "get": {
                "description": "fetches the assets by user wallet address\none of the parameters walletAddress and x-wallet is mandatory and must be provided",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "operationId": "get-struct-array-by-string",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Wallet Address",
                        "name": "walletAddress",
                        "in": "path"
                    },
                    {
                        "type": "string",
                        "description": "Wallet Address",
                        "name": "x-wallet",
                        "in": "header"
                    },
                    {
                        "type": "integer",
                        "description": "Offset",
                        "name": "offset",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Limit",
                        "name": "limit",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "status = true, Code = 200",
                        "schema": {
                            "$ref": "#/definitions/model.Result"
                        }
                    },
                    "400": {
                        "description": "status = true, Code = 400, Message = Provide a valid walletAddress",
                        "schema": {
                            "$ref": "#/definitions/model.Result"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "model.APIStatus": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "message": {
                    "type": "string"
                },
                "status": {
                    "type": "boolean"
                }
            }
        },
        "model.Paging": {
            "type": "object",
            "properties": {
                "count": {
                    "type": "string"
                },
                "limit": {
                    "type": "integer"
                },
                "offset": {
                    "type": "integer"
                }
            }
        },
        "model.Result": {
            "type": "object",
            "properties": {
                "apistatus": {
                    "$ref": "#/definitions/model.APIStatus"
                },
                "data": {},
                "paging": {
                    "$ref": "#/definitions/model.Paging"
                }
            }
        }
    }
}